'use strict';

var babyjubjub = exports;

var BN = require('bn.js');

function Babyjubjub() {
  this.a = new BN('168700', 10);
  this.d = new BN('168696', 10);
  this.g = [new BN('16540640123574156134436876038791482806971768689494387082833631921987005038935', 10),
  new BN('20819045374670962167435360035096875258406992893633759881276124905556507972311', 10)];
  this.q = new BN('21888242871839275222246405745257275088548364400416034343698204186575808495617', 10);
  this.zero =[new BN('0', 10),new BN('1', 10)];
  this.referencePoints = [[new BN('16540640123574156134436876038791482806971768689494387082833631921987005038935',10),new BN('20819045374670962167435360035096875258406992893633759881276124905556507972311',10)],[new BN('16113908992958654580576121332105641939386785007070631827837038721187369061406',10),new BN('13543135889321786196419170914180430694274295243334629701622351182531864521005',10)],[new BN('1076620697199135180779993208327990452191184083362380553163440209762849514722',10),new BN('9853647717691139336869472377314617825232074251805086035693773616712748042621',10)],[new BN('16627001262217752418232399229085639463508031460877751193558076525766939746290',10),new BN('11293652998871813128673002603563161847178345330386607075500167792306707414784',10)],[new BN('17193433650870834145767552013187426225541809928144693031023390964075029712734',10),new BN('5072569689932329450279131871579186295141413025474978915530995363951190322881',10)],[new BN('4873235912926533530309568745817380743686540272116562512062487934223913563495',10),new BN('20887932140417543826962958973692455850672178541440622622454994848671306619256',10)],[new BN('13767260734734474739001976441109696104935454744751485173007370998306247492837',10),new BN('7277100362785830115685758358246384145272350050315302288606808934579002798170',10)],[new BN('5168666886441176511838430760090984216786231009368839315781763235428028670684',10),new BN('3540433457622386931934945079292210609637634993709224481925029112076460456996',10)],[new BN('17046338648613415398615213812309234521849044588294307506973008689438840217899',10),new BN('14272669301071735679182285797323588275064578318544636168261104544792101541990',10)],[new BN('6103107088791296435663387020164733811397570791509925308172821397187679660537',10),new BN('20157929798032613907880757565781377612126801225727980602298341328786303458379',10)],[new BN('565031082270784511526969856259883151926356254071667969886730963860599728056',10),new BN('14351326155628442688947194939783765682844161210398113742490075739781323640871',10)],[new BN('1878074526134353812641663603934698101461986157998056830302811006883988187476',10),new BN('5565682932474786197900781172367838372598722114471922169620164749116211930418',10)],[new BN('13672169211433958273621238439911098016168010235805679272891906788825906767477',10),new BN('16993769844209052488906232590926697127416351186634421476666285502971626970799',10)],[new BN('8786223216203880201224432554831626947213331095198567432758715078977508525796',10),new BN('16797242172883548168306567617635110425492927504670010689612741788509959995399',10)],[new BN('19511309402973225262220917535135014365437820143921553826584252488702725453571',10),new BN('9338977329665951798955457617712647275145997611482141302608593432255344579057',10)],[new BN('16028196540354630930568165251687951500491621991802323119452548785930915528076',10),new BN('18645848113938245520223945248697200125633399343990508671600304297984017349160',10)],[new BN('19742431422261785319802821264201579700941162512642502337867718752917066272640',10),new BN('536084822077324023932884466004395638775832375297641821069560863946633279466',10)],[new BN('14746857159778379625020692419257609100427724837329870240615509615917072852253',10),new BN('7425274762180503574751542408424612279826320412501428803476842575167052357727',10)],[new BN('20889720887632746108337230904734401090249084928639392128409710264031189168079',10),new BN('7374404549650513296245607667385829743858871232666564805397932455623504294931',10)],[new BN('11456585778581014417551378754926360274765118796288219726069431816759660290973',10),new BN('3742731251980531555285474025831654734487023770305417749240256628868846389433',10)],[new BN('1053825478491259598928875231158071559648900247213065117000464156362957297198',10),new BN('7750617224000830369483777989476229656733788257200638169878226052413733766319',10)]]
}

function babyjubjub_assert_on_curve(P, curve){
  var uu = P[0].mul(P[0]);
  var vv = P[1].mul(P[1]);
  var left = (curve.a.mul(uu).add(vv)).umod(curve.q);
  var right = curve.d.mul(uu).mul(vv).addn(1).umod(curve.q);

  console.assert(left.eq(right));
}

function babyjubjub_add(P1, P2, curve){
  var u = P1[0], v = P1[1];
  var x = P2[0], y = P2[1];
  var allMul = curve.d.mul(u).mul(v).mul(x).mul(y);
  var xtop = (u.mul(y).add(x.mul(v))).umod(curve.q);

  var du = (xtop.mul((allMul.addn(1)).invm(curve.q))).umod(curve.q);

  var ytop = v.mul(y).sub(curve.a.mul(u).mul(x));
  var dv = (ytop.mul((allMul.neg().addn(1)).invm(curve.q))).umod(curve.q);
  return [du, dv];
}

function babyjubjub_multiply(exp, P, curve){
  var i;
  var R0 = curve.zero;
  var R1 = P;
  var exp_bin = exp.toString(2, 254);
  for (i=253; i>=0; i--) {
    if (exp_bin.charAt(i) == '1'){
      R0 = babyjubjub_add(R0, R1, curve);
    }
    R1 = babyjubjub_add(R1, R1, curve);
  }
  return R0;
}

function pedersenCommitment(inputs, secret, curve){
  var i;
  var pedRoot = curve.zero;
  for (i = 0; i < inputs.length;i++){
    pedRoot = babyjubjub_add(pedRoot,babyjubjub_multiply(inputs[i],curve.referencePoints[i], curve), curve);
    console.log(pedRoot[0].toString(10));
    babyjubjub_assert_on_curve(pedRoot, curve);
  }

  pedRoot = babyjubjub_add(pedRoot,
                babyjubjub_multiply(secret,curve.referencePoints[curve.referencePoints.length - 1]
                                    , curve), curve);
  console.log(pedRoot[0].toString(10));
  babyjubjub_assert_on_curve(pedRoot, curve);
  return pedRoot
}

  var curve = new Babyjubjub();
  var inputs = [new BN('1',10),new BN('70',10),new BN('20',10)]
  var secret = new BN('101',10);
  var ped = pedersenCommitment(inputs, secret, curve);
  babyjubjub_assert_on_curve(ped, curve);
  console.log(ped[0].toString(10));

